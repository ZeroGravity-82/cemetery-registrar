version: '3'
services:
  registrar-nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - '${NGINX_HOST_PORT}:80'
    depends_on:
      - registrar-php-fpm
    restart: always
  registrar-php-fpm:
    build:
      context: ./docker/php-fpm
      dockerfile: Dockerfile
      args:
        - HOST_USER_UID=${HOST_USER_UID}
        - HOST_USER_GID=${HOST_USER_GID}
    volumes:
      - .:/app
    environment:
      APP_DEBUG: 1
    depends_on:
      - registrar-mysql
    restart: always
  registrar-php-cli:
    build:
      context: ./docker/php-cli
      dockerfile: Dockerfile
      args:
        - HOST_USER_UID=${HOST_USER_UID}
        - HOST_USER_GID=${HOST_USER_GID}
    volumes:
      - .:/app
      - composer:/tmp/composer-cache
    environment:
      APP_DEBUG: 1
      PHP_IDE_CONFIG: 'serverName=registrar.docker'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    profiles:
      - 'cli-tools'        # the profile is needed in order not to start this service with "docker compose up" command
  registrar-mysql:
    image: mysql:8.0
    volumes:
      - mysql:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
    ports:
      - '${DATABASE_HOST_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    restart: always
volumes:
  composer:
  mysql:
